[tool:pytest]
# Pytest configuration for KuzuMemory

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --junit-xml=test-results.xml

# Test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, with database)
    e2e: End-to-end tests (full workflows)
    benchmark: Performance benchmark tests
    regression: Regression tests for data integrity and performance
    slow: Slow tests that take more than 5 seconds
    requires_kuzu: Tests that require Kuzu database
    memory_intensive: Tests that use significant memory
    network: Tests that require network access
    
    # Memory type markers
    identity: Tests for identity memory handling
    preference: Tests for preference memory handling
    decision: Tests for decision memory handling
    pattern: Tests for pattern memory handling
    solution: Tests for solution memory handling
    status: Tests for status memory handling
    
    # Feature markers
    deduplication: Tests for deduplication functionality
    entity_extraction: Tests for entity extraction
    pattern_extraction: Tests for pattern extraction
    recall: Tests for memory recall functionality
    generation: Tests for memory generation
    caching: Tests for caching functionality
    performance: Tests for performance requirements
    compliance: Tests for protocol compliance (JSON-RPC, MCP)

# Timeout settings
timeout = 300
timeout_method = thread

# Coverage settings
[coverage:run]
source = src/kuzu_memory
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov
title = KuzuMemory Test Coverage

[coverage:xml]
output = coverage.xml
